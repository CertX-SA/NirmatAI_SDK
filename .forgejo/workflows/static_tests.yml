name: Static tests

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ forgejo.workflow }}-${{ forgejo.event.pull_request.number  forgejo.head_ref  forgejo.ref }}
  cancel-in-progress: ${{ forgejo.event_name == 'pull_request' }}

jobs:
  setup:
    runs-on: docker
    container:
      image: ubuntu:latest
    steps:
      - name: Checkout
        uses: https://code.forgejo.org/actions/checkout@v4
      - name: Setting up the relevant container and run development
        uses: ./.forgejo/workflows/actions/install_dependencies

  checks:
    needs: setup
    runs-on: docker
    strategy:
      matrix:
        quality-command:
          - ansible-lint
          - check-format-code
          - type-check
    steps:
      - uses: https://code.forgejo.org/actions/checkout@v4
      - uses: ./.forgejo/workflows/actions/install_dependencies
      - name: run ${{ matrix.quality-command }}
        env:
          POD_NAME: forgejo
        run: make ${{ matrix.quality-command }}

  tests:
    needs: setup
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@v4
      - uses: ./.forgejo/workflows/actions/install_dependencies
      - name: run test without integration tests
        env:
          POD_NAME: forgejo
        run: make test
      - name: run coverage without integration tests
        env:
          POD_NAME: forgejo
        run: make test-coverage
      - name: Archive code coverage results
        uses: https://code.forgejo.org/actions/upload-artifact@v4
        if: always()
        with:
          name: code-coverage-report
          path: htmlcov/

  docs:
    needs: setup
    runs-on: docker
    steps:
      - uses: https://code.forgejo.org/actions/checkout@v4
      - uses: ./.forgejo/workflows/actions/install_dependencies
      - name: run docs
        env:
          POD_NAME: forgejo
        run: make build-docs
      - name: Archive docs
        uses: https://code.forgejo.org/actions/upload-artifact@v4
        if: always()
        with:
          name: docs
          path: docs/build/

  all_checks_passed:
    needs:
      - checks
      - tests
      - docs
    runs-on: docker
    steps:
      - run: echo "All checks passed and docs built successfully!"
