[project]
name = "nirmatai_sdk"
version = "0.1.0"
description = "NirmatAI Software Development Kit"
authors = [{ name = "Ilker Gul", email = "ilker.gul@certx.com" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pgpt-python @ git+https://github.com/mrepetto-certx/pgpt-python.git@main",
    "pandas==2.2.2",
    "openpyxl==3.1.4",
    "numpy==1.26.4",
    "seaborn==0.13.2",
    "lxml==5.2.2",
    "scikit-learn==1.5.1",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: SDK",
]
[project.urls]
Homepage = "https://github.com/CertX-SA/NirmatAI_SDK"
Issues = "https://github.com/CertX-SA/NirmatAI_SDK/issues"

[project.optional-dependencies]
dev = [
    "ruff==0.2.2",
    "mypy==1.8.0",
    "pytest==8.0.2",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.23.5",
    "types-pyyaml==6.0.12.12",
    "mlflow==2.13.0",
]
docs = ["sphinx==7.3.7", "sphinx-rtd-theme==2.0.0"]

# ruff
[tool.ruff]
target-version = "py312"

# See all rules at https://beta.ruff.rs/docs/rules/
lint.select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "I",   # isort
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "PT",  # flake8-pytest-style
    "RUF", # Ruff-specific rules
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

## mypy
[tool.mypy]
python_version = "3.12"
strict = true
check_untyped_defs = false
explicit_package_bases = true
warn_unused_ignores = false
exclude = ["tests"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["nirmatai_sdk/tests"]
addopts = ["--import-mode=importlib"]

# When installing
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["nirmatai_sdk", "nirmatai_sdk.*"]
